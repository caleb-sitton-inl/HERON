name: GitHub HERON test
run-name: ${{ github.actor }} is testing out HERON
on: [push, pull_request]
jobs:
  Test-HERON-Linux:
    runs-on: [self-hosted, linux]
    steps:
      - run: echo " The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo " This job is now running on a ${{ runner.os }} server"
      - run: echo " The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: pwd
      - run: cd .. && rm -Rf raven && git clone https://github.com/idaholab/raven.git
      - run: python3 ../raven/scripts/install_plugins.py -s TEAL
      - run: python3 ../raven/scripts/install_plugins.py -s ${{ github.workspace }}
      - run: WD=`(cd ../../.. && pwd)` && export RAVEN_LIBS_NAME="raven_libs_"`basename $WD` && ../raven/scripts/establish_conda_env.sh --install
      - run: cd ../raven && ./build_raven
      - run: ../raven/run_tests --library-report
      - run: > # The overhead time added by checking coverage is currently about 19% for a single run_tests. Reducing the frequency of coverage checks may be preferable if this increases.
          ./check_py_coverage.sh -j4 &&
          DATA_FILE=`pwd`/.coverage && COV_RCFILE=`pwd`/tests/.coveragerc &&
          COV_RPT=`report_py_coverage.sh --data-file=$DATA_FILE --coverage-rc-file=$COV_RCFILE` &&
          echo "::notice title=Coverage Summary::$COV_RPT For details, download 'coverage_results' from Artifacts, extract all files, and open 'index.html'."
      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage_results
          path: tests/coverage_html_report
  Test-HERON-Windows:
    runs-on: [self-hosted, windows]
    steps:
      - run: echo " The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo " This job is now running on a ${{ runner.os }} server"
      - run: echo " The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: pwd
      - run: cd ..; if (Test-Path raven) {Remove-Item -Recurse -Force raven}; git clone https://github.com/idaholab/raven.git
      - run: python ../raven/scripts/install_plugins.py -s TEAL
      - run: python ../raven/scripts/install_plugins.py -s ${{ github.workspace }}
      - run: $Env:RAVEN_LIBS_NAME =  "raven_libraries_"+(Get-Location).Path.Split("\")[-4]; bash ../raven/scripts/establish_conda_env.sh --install --conda-defs $HOME/Miniconda3/etc/profile.d/conda.sh
      - run: cd ../raven; bash ./build_raven
      - run: bash ../raven/run_tests --library-report
      - run: bash ../raven/run_tests -j4 --plugins --re=HERON/tests
